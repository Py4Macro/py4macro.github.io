Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def stochastic_solow(T=160,  # 160=40*4 40年間の四半期の数
                     rho=rho,
                     sigma=sigma,
                     g=g,
                     s=s,
                     d=0.025,
                     a=a,
                     H=H_dic[1980],  # 1980年平均に固定
                     K0=K_dic[1980],
                     B0=B0):
    """引数：
            T:     シミュレーションの回数
            rho:   AR(1)のパラメータ
            sigma: ホワイト・ノイズ分散
            g:     TFPの平均四半期成長率
            s:     貯蓄率
            d:     資本減耗率
            a:     生産関数のパラメータ（資本の所得割合）
            H:     総労働時間
       返り値
            次の変数を含むDataFrame
            GDP，消費，投資，資本ストック，全要素生産性の水準，トレンド，変動"""
    
    # ========== A,B,Kの計算 ==========
    # アップデート用変数、最初は初期値を設定
    A = 1           #1
    B = B0          #2
    K = K0          #3
    
    # 計算結果を格納するリスト
    A_lst = [A]     #4
    B_lst = [B]     #5
    K_lst = [K]     #6

    # A,B,Kの時系列の計算
    for t in range(1,T):
        
        K = s * A*B * K**a *H**(1-a) + (1-d)*K  #7
        e = np.random.normal(0, scale=sigma)    #8
        A = A**rho * np.exp(e)                  #9
        B = B0 * (1+g)**t                       #10
        
        A_lst.append(A)                         #11
        B_lst.append(B)
        K_lst.append(K)
    
    # ========== DataFrameの作成 ==========
    df_sim = pd.DataFrame({'K':K_lst,           #12
                           'A':A_lst,
                           'B':B_lst})

    # ========== Y,C,Iの計算 ==========          #13
    df_sim['Y'] = df_sim['A'] * df_sim['B'] * df_sim['K']**a * H**(1-a)
    df_sim['C'] = (1-s) * df_sim['Y']
    df_sim['I'] = s * df_sim['Y']
    
    # ========== トレンドとサイクルの計算 ==========
    for v in ['K','A','Y','C','I']:
        
        # ---------- レンドの計算 ----------      #14
        df_sim[f'{v}_log_trend'] = py4macro.trend( np.log(df_sim[v]) )
        
        # ---------- サイクルの計算 ----------    #15
        df_sim[f'{v}の変動'] = 100 * ( np.log( df_sim[v] ) - df_sim[f'{v}_log_trend'] )
    
    return df_sim
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[55], line 2[0m
[1;32m      1[0m [38;5;28;01mdef[39;00m [38;5;21mstochastic_solow[39m(T[38;5;241m=[39m[38;5;241m160[39m,  [38;5;66;03m# 160=40*4 40年間の四半期の数[39;00m
[0;32m----> 2[0m                      rho[38;5;241m=[39m[43mrho[49m,
[1;32m      3[0m                      sigma[38;5;241m=[39msigma,
[1;32m      4[0m                      g[38;5;241m=[39mg,
[1;32m      5[0m                      s[38;5;241m=[39ms,
[1;32m      6[0m                      d[38;5;241m=[39m[38;5;241m0.025[39m,
[1;32m      7[0m                      a[38;5;241m=[39ma,
[1;32m      8[0m                      H[38;5;241m=[39mH_dic[[38;5;241m1980[39m],  [38;5;66;03m# 1980年平均に固定[39;00m
[1;32m      9[0m                      K0[38;5;241m=[39mK_dic[[38;5;241m1980[39m],
[1;32m     10[0m                      B0[38;5;241m=[39mB0):
[1;32m     11[0m [38;5;250m    [39m[38;5;124;03m"""引数：[39;00m
[1;32m     12[0m [38;5;124;03m            T:     シミュレーションの回数[39;00m
[1;32m     13[0m [38;5;124;03m            rho:   AR(1)のパラメータ[39;00m
[0;32m   (...)[0m
[1;32m     21[0m [38;5;124;03m            次の変数を含むDataFrame[39;00m
[1;32m     22[0m [38;5;124;03m            GDP，消費，投資，資本ストック，全要素生産性の水準，トレンド，変動"""[39;00m
[1;32m     24[0m     [38;5;66;03m# ========== A,B,Kの計算 ==========[39;00m
[1;32m     25[0m     [38;5;66;03m# アップデート用変数、最初は初期値を設定[39;00m

[0;31mNameError[0m: name 'rho' is not defined

